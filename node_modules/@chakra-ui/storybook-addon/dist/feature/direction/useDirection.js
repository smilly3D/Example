"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/feature/direction/useDirection.tsx
var useDirection_exports = {};
__export(useDirection_exports, {
  useDirection: () => useDirection
});
module.exports = __toCommonJS(useDirection_exports);
var import_react = require("react");
var import_addons = require("@storybook/addons");

// src/constants.ts
var ADDON_ID = "@chakra-ui/storybook-addon";
var COLOR_MODE_TOOL_ID = `${ADDON_ID}/color-mode-tool`;
var DIRECTION_TOOL_ID = `${ADDON_ID}/direction-tool`;
var EVENTS = {
  TOGGLE_COLOR_MODE: `${ADDON_ID}/toggleColorMode`,
  TOGGLE_DIRECTION: `${ADDON_ID}/toggleDirection`
};

// src/feature/direction/useDirection.tsx
var useDirection = (initialDirection = "ltr") => {
  const [direction, setDirection] = (0, import_react.useState)(initialDirection.toLowerCase());
  (0, import_react.useEffect)(() => {
    document.documentElement.dir = direction;
  }, [direction]);
  (0, import_react.useEffect)(() => {
    const channel = import_addons.addons.getChannel();
    const callback = (value) => setDirection(value);
    channel.on(EVENTS.TOGGLE_DIRECTION, callback);
    return () => {
      channel.removeListener(EVENTS.TOGGLE_DIRECTION, callback);
    };
  }, [setDirection]);
  return direction;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useDirection
});
