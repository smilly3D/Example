"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/feature/direction/DirectionTool.tsx
var DirectionTool_exports = {};
__export(DirectionTool_exports, {
  DirectionTool: () => DirectionTool
});
module.exports = __toCommonJS(DirectionTool_exports);
var import_react = require("react");
var import_api = require("@storybook/api");
var import_addons = require("@storybook/addons");
var import_components = require("@storybook/components");

// src/constants.ts
var ADDON_ID = "@chakra-ui/storybook-addon";
var COLOR_MODE_TOOL_ID = `${ADDON_ID}/color-mode-tool`;
var DIRECTION_TOOL_ID = `${ADDON_ID}/direction-tool`;
var EVENTS = {
  TOGGLE_COLOR_MODE: `${ADDON_ID}/toggleColorMode`,
  TOGGLE_DIRECTION: `${ADDON_ID}/toggleDirection`
};

// src/feature/direction/DirectionTool.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var LTRIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    stroke: "currentColor",
    fill: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    height: "1em",
    width: "1em",
    style: {
      transform: "scale(1.2)"
    },
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M9 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2H9C6.79 2 5 3.79 5 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zm0 12v3H5v2h12v3l4-4-4-4z" })
    ]
  }
);
var RTLIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    stroke: "currentColor",
    fill: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    height: "1em",
    width: "1em",
    style: {
      transform: "scale(1.2)"
    },
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M10 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zM8 14l-4 4 4 4v-3h12v-2H8v-3z" })
    ]
  }
);
var DirectionTool = () => {
  const [globals, setGlobals] = (0, import_api.useGlobals)();
  const [direction, setDirection] = (0, import_api.useAddonState)(
    DIRECTION_TOOL_ID,
    globals[DIRECTION_TOOL_ID] || "ltr"
  );
  const targetDirection = direction !== "ltr" ? "ltr" : "rtl";
  (0, import_react.useEffect)(() => {
    setGlobals({ [DIRECTION_TOOL_ID]: direction });
  }, [direction, setGlobals]);
  const toggleDirection = (0, import_react.useCallback)(() => {
    const channel = import_addons.addons.getChannel();
    channel.emit(EVENTS.TOGGLE_DIRECTION, targetDirection);
    setDirection(targetDirection);
  }, [setDirection, targetDirection]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_components.IconButton,
    {
      active: direction === "rtl",
      title: `Set layout direction to ${targetDirection}`,
      onClick: toggleDirection,
      children: targetDirection === "ltr" ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(LTRIcon, {}) : /* @__PURE__ */ (0, import_jsx_runtime.jsx)(RTLIcon, {})
    }
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DirectionTool
});
