// src/feature/arg-types.ts
function validateColorScheme(value) {
  const valueKeys = Object.keys(value || {});
  return [
    "50",
    "100",
    "200",
    "300",
    "400",
    "500",
    "600",
    "700",
    "800",
    "900"
  ].every((term) => valueKeys.includes(term));
}
function getThemingArgTypes(theme, componentName) {
  const component = theme.components[componentName];
  if (!component) {
    return void 0;
  }
  const argTypes = {};
  const variantOptions = Object.keys(component.variants || {});
  if (variantOptions.length) {
    argTypes.variant = {
      type: { name: "enum", value: variantOptions },
      defaultValue: component.defaultProps?.variant
    };
  }
  const sizeOptions = Object.keys(component.sizes || {});
  if (sizeOptions.length) {
    argTypes.size = {
      type: { name: "enum", value: sizeOptions },
      defaultValue: component.defaultProps?.size
    };
  }
  if (component.defaultProps?.["colorScheme"]) {
    const colorSchemes = Object.entries(theme.colors).filter(([, value]) => validateColorScheme(value)).map(([key]) => key);
    if (colorSchemes.length) {
      argTypes.colorScheme = {
        type: { name: "enum", value: colorSchemes },
        defaultValue: component.defaultProps?.colorScheme
      };
    }
  }
  return argTypes;
}

export {
  getThemingArgTypes
};
