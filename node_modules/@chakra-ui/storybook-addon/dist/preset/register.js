"use strict";

// src/preset/register.ts
var import_addons3 = require("@storybook/addons");

// src/constants.ts
var ADDON_ID = "@chakra-ui/storybook-addon";
var COLOR_MODE_TOOL_ID = `${ADDON_ID}/color-mode-tool`;
var DIRECTION_TOOL_ID = `${ADDON_ID}/direction-tool`;
var EVENTS = {
  TOGGLE_COLOR_MODE: `${ADDON_ID}/toggleColorMode`,
  TOGGLE_DIRECTION: `${ADDON_ID}/toggleDirection`
};

// src/feature/color-mode/ColorModeTool.tsx
var import_api = require("@storybook/api");
var import_components = require("@storybook/components");
var import_addons = require("@storybook/addons");
var import_jsx_runtime = require("react/jsx-runtime");
var MoonIcon = () => /* @__PURE__ */ (0, import_jsx_runtime.jsx)("svg", { viewBox: "0 0 24 24", focusable: "false", children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
  "path",
  {
    fill: "currentColor",
    d: "M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
  }
) });
var SunIcon = () => /* @__PURE__ */ (0, import_jsx_runtime.jsx)("svg", { viewBox: "0 0 24 24", focusable: "false", children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
  "g",
  {
    strokeLinejoin: "round",
    strokeLinecap: "round",
    strokeWidth: "2",
    fill: "none",
    stroke: "currentColor",
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("circle", { cx: "12", cy: "12", r: "5" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M12 1v2" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M12 21v2" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M4.22 4.22l1.42 1.42" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M18.36 18.36l1.42 1.42" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M1 12h2" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M21 12h2" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M4.22 19.78l1.42-1.42" }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("path", { d: "M18.36 5.64l1.42-1.42" })
    ]
  }
) });
var ColorModeTool = () => {
  const isDarkMode = localStorage.getItem("chakra-ui-color-mode") === "dark";
  const [darkMode, setDarkMode] = (0, import_api.useAddonState)(
    `${ADDON_ID}/dark-mode`,
    isDarkMode
  );
  const channel = import_addons.addons.getChannel();
  const toggleDarkMode = () => {
    channel.emit(EVENTS.TOGGLE_COLOR_MODE, !darkMode ? "dark" : "light");
    setDarkMode(!darkMode);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_components.IconButton,
    {
      active: darkMode,
      title: `Set color mode to ${darkMode ? "light" : "dark"}`,
      onClick: toggleDarkMode,
      children: darkMode ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(SunIcon, {}) : /* @__PURE__ */ (0, import_jsx_runtime.jsx)(MoonIcon, {})
    }
  );
};

// src/feature/direction/DirectionTool.tsx
var import_react = require("react");
var import_api2 = require("@storybook/api");
var import_addons2 = require("@storybook/addons");
var import_components2 = require("@storybook/components");
var import_jsx_runtime2 = require("react/jsx-runtime");
var LTRIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(
  "svg",
  {
    stroke: "currentColor",
    fill: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    height: "1em",
    width: "1em",
    style: {
      transform: "scale(1.2)"
    },
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("path", { d: "M9 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2H9C6.79 2 5 3.79 5 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zm0 12v3H5v2h12v3l4-4-4-4z" })
    ]
  }
);
var RTLIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(
  "svg",
  {
    stroke: "currentColor",
    fill: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    height: "1em",
    width: "1em",
    style: {
      transform: "scale(1.2)"
    },
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("path", { fill: "none", d: "M0 0h24v24H0V0z" }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("path", { d: "M10 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zM8 14l-4 4 4 4v-3h12v-2H8v-3z" })
    ]
  }
);
var DirectionTool = () => {
  const [globals, setGlobals] = (0, import_api2.useGlobals)();
  const [direction, setDirection] = (0, import_api2.useAddonState)(
    DIRECTION_TOOL_ID,
    globals[DIRECTION_TOOL_ID] || "ltr"
  );
  const targetDirection = direction !== "ltr" ? "ltr" : "rtl";
  (0, import_react.useEffect)(() => {
    setGlobals({ [DIRECTION_TOOL_ID]: direction });
  }, [direction, setGlobals]);
  const toggleDirection = (0, import_react.useCallback)(() => {
    const channel = import_addons2.addons.getChannel();
    channel.emit(EVENTS.TOGGLE_DIRECTION, targetDirection);
    setDirection(targetDirection);
  }, [setDirection, targetDirection]);
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
    import_components2.IconButton,
    {
      active: direction === "rtl",
      title: `Set layout direction to ${targetDirection}`,
      onClick: toggleDirection,
      children: targetDirection === "ltr" ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(LTRIcon, {}) : /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(RTLIcon, {})
    }
  );
};

// src/preset/register.ts
import_addons3.addons.register(ADDON_ID, () => {
  const match = ({ viewMode }) => Boolean(viewMode && viewMode.match(/^(story|docs)$/));
  import_addons3.addons.add(DIRECTION_TOOL_ID, {
    type: import_addons3.types.TOOL,
    title: "Direction",
    render: DirectionTool,
    match
  });
  import_addons3.addons.add(COLOR_MODE_TOOL_ID, {
    type: import_addons3.types.TOOL,
    title: "Color Mode",
    render: ColorModeTool,
    match
  });
});
